<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>665</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::floatBitsToInt' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::floatBitsToInt</FUNCTION>
    <DECORATED>?floatBitsToInt@glm@@YAHAEBM@Z</DECORATED>
    <FUNCLINE>665</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>684</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::floatBitsToUint' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::floatBitsToUint</FUNCTION>
    <DECORATED>?floatBitsToUint@glm@@YAIAEBM@Z</DECORATED>
    <FUNCLINE>684</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>703</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::intBitsToFloat' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::intBitsToFloat</FUNCTION>
    <DECORATED>?intBitsToFloat@glm@@YAMAEBH@Z</DECORATED>
    <FUNCLINE>703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_common.inl</FILENAME>
      <LINE>722</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::uintBitsToFloat' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::uintBitsToFloat</FUNCTION>
    <DECORATED>?uintBitsToFloat@glm@@YAMAEBI@Z</DECORATED>
    <FUNCLINE>722</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>4</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>The function 'glm::detail::overflow' could be marked constexpr if compile-time evaluation is desired (f.4).</DESCRIPTION>
    <FUNCTION>glm::detail::overflow</FUNCTION>
    <DECORATED>?overflow@detail@glm@@YAMXZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>4</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::overflow' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::overflow</FUNCTION>
    <DECORATED>?overflow@detail@glm@@YAMXZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>15</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::uif32::{ctor}</FUNCTION>
    <DECORATED>??0uif32@detail@glm@@QEAA@XZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>19</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::uif32::uif32' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::uif32::{ctor}</FUNCTION>
    <DECORATED>??0uif32@detail@glm@@QEAA@M@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>23</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::uif32::uif32' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::uif32::{ctor}</FUNCTION>
    <DECORATED>??0uif32@detail@glm@@QEAA@I@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>33</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 's' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>84</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>74</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>101</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>46</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat32</FUNCTION>
    <DECORATED>?toFloat32@detail@glm@@YAMF@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>109</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'i' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>121</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 's' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>109</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>141</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>169</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>195</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>180</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>228</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_half.inl</FILENAME>
      <LINE>236</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>glm::detail::toFloat16</FUNCTION>
    <DECORATED>?toFloat16@detail@glm@@YAFAEBM@Z</DECORATED>
    <FUNCLINE>105</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>179</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>The const variable 'Max32' can be computed at compile-time. Consider using constexpr (con.5).</DESCRIPTION>
    <FUNCTION>glm::uaddCarry</FUNCTION>
    <DECORATED>?uaddCarry@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>181</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::uaddCarry</FUNCTION>
    <DECORATED>?uaddCarry@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>176</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::uaddCarry' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::uaddCarry</FUNCTION>
    <DECORATED>?uaddCarry@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>176</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>200</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::usubBorrow</FUNCTION>
    <DECORATED>?usubBorrow@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>194</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::usubBorrow' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::usubBorrow</FUNCTION>
    <DECORATED>?usubBorrow@glm@@YAIAEBI0AEAI@Z</DECORATED>
    <FUNCLINE>194</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>216</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::umulExtended</FUNCTION>
    <DECORATED>?umulExtended@glm@@YAXAEBI0AEAI1@Z</DECORATED>
    <FUNCLINE>213</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>217</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::umulExtended</FUNCTION>
    <DECORATED>?umulExtended@glm@@YAXAEBI0AEAI1@Z</DECORATED>
    <FUNCLINE>213</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>213</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::umulExtended' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::umulExtended</FUNCTION>
    <DECORATED>?umulExtended@glm@@YAXAEBI0AEAI1@Z</DECORATED>
    <FUNCLINE>213</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>232</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::imulExtended</FUNCTION>
    <DECORATED>?imulExtended@glm@@YAXHHAEAH0@Z</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>233</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>glm::imulExtended</FUNCTION>
    <DECORATED>?imulExtended@glm@@YAXHHAEAH0@Z</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_integer.inl</FILENAME>
      <LINE>229</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::imulExtended' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::imulExtended</FUNCTION>
    <DECORATED>?imulExtended@glm@@YAXHHAEAH0@Z</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_float.hpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::float_t&lt;float&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$float_t@M@detail@glm@@QEAA@M@Z</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_float.hpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'union glm::detail::float_t&lt;float&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>glm::detail::float_t&lt;float&gt;::=</FUNCTION>
    <DECORATED>??4?$float_t@M@detail@glm@@QEAAAEAT012@AEBT012@@Z</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_float.hpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::float_t&lt;double&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$float_t@N@detail@glm@@QEAA@N@Z</DECORATED>
    <FUNCLINE>47</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_float.hpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'union glm::detail::float_t&lt;double&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>glm::detail::float_t&lt;double&gt;::=</FUNCTION>
    <DECORATED>??4?$float_t@N@detail@glm@@QEAAAEAT012@AEBT012@@Z</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_float.hpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::detail::float_t&lt;double&gt;::mantissa</FUNCTION>
    <DECORATED>?mantissa@?$float_t@N@detail@glm@@QEBA_JXZ</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_float.hpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::detail::float_t&lt;double&gt;::exponent</FUNCTION>
    <DECORATED>?exponent@?$float_t@N@detail@glm@@QEBA_JXZ</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtx\</FILEPATH>
      <FILENAME>hash.inl</FILENAME>
      <LINE>15</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::detail::hash_combine' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::detail::hash_combine</FUNCTION>
    <DECORATED>?hash_combine@detail@glm@@YAXAEA_K_K@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>226</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::unordered_map&lt;unsigned int,CMDL,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,CMDL&gt; &gt; &gt;::unordered_map&lt;unsigned int,CMDL,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,CMDL&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'CMDLMap''</FUNCTION>
    <DECORATED>??__ECMDLMap@@YAXXZ</DECORATED>
    <FUNCLINE>226</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>227</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::unordered_map&lt;unsigned int,MLVL,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,MLVL&gt; &gt; &gt;::unordered_map&lt;unsigned int,MLVL,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,MLVL&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'MLVLMap''</FUNCTION>
    <DECORATED>??__EMLVLMap@@YAXXZ</DECORATED>
    <FUNCLINE>227</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>228</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::unordered_map&lt;unsigned int,STRG,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,STRG&gt; &gt; &gt;::unordered_map&lt;unsigned int,STRG,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,STRG&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'STRGMap''</FUNCTION>
    <DECORATED>??__ESTRGMap@@YAXXZ</DECORATED>
    <FUNCLINE>228</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::unordered_map&lt;unsigned int,MREA,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,MREA&gt; &gt; &gt;::unordered_map&lt;unsigned int,MREA,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,MREA&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'MREAMap''</FUNCTION>
    <DECORATED>??__EMREAMap@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>230</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::unordered_map&lt;unsigned int,TXTR,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,TXTR&gt; &gt; &gt;::unordered_map&lt;unsigned int,TXTR,std::hash&lt;unsigned int&gt;,std::equal_to&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,TXTR&gt; &gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'TXTRMap''</FUNCTION>
    <DECORATED>??__ETXTRMap@@YAXXZ</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>300</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'getLoc' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>257</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>259</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>260</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>254</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'assetCount_resourcesTable' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>assetCount_resourcesTable</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>281</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>282</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>291</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'compressionFlag' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>compressionFlag</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>296</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'fourCC' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>fourCC</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>297</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'AssetID' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>AssetID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'size' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>size</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>299</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'offset' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>offset</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>302</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>304</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>305</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>306</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>318</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>330</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>330</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>280</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'fourCC': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>303</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'fourCC': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>330</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>351</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>findAsset</FUNCTION>
    <DECORATED>?findAsset@@YA?AV?$vector@DV?$allocator@D@std@@@std@@IV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>428</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'value' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>431</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'red' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>432</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'green' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>433</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'blue' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>425</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'colour' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>428</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>428</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>431</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>432</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>433</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>428</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>436</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>438</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>439</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>425</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Unpack565' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Unpack565</FUNCTION>
    <DECORATED>?Unpack565@@YAHPEBEPEAE@Z</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>452</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'a' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>453</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'b' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>458</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'c' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>459</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'd' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>484</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'packed' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>497</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'offset' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>483</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'ind' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>445</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'rgba' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>448</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'bytes' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>483</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>448</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26471</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast. A cast from void* can use static_cast (type.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>470</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>471</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>480</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'indices' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>indices</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>452</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'codes': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>453</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>453</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'codes': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>458</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>459</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>465</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>470</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>471</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>483</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'indices': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>483</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>484</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>487</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>488</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>489</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>490</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>497</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>500</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>500</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>458</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>459</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>463</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>465</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>465</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>470</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>471</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>497</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>500</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>DecompressColourGCN</FUNCTION>
    <DECORATED>?DecompressColourGCN@@YAXIPEAEPEBX@Z</DECORATED>
    <FUNCLINE>445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>537</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'HBlocks' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>538</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'VBlocks' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>541</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'HBlocksm1' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>542</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'VBlocksm1' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>543</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'HBlocksm2' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>544</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'VBlocksm2' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>545</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'HBlocksm3' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>546</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'VBlocksm3' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>547</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'numblocks' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>549</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'blockSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>551</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'imageSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>556</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>556</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>562</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>562</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>562</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>563</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>563</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>563</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>563</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>564</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>564</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>564</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>564</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>565</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>565</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>565</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>565</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>594</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>596</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>598</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>517</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>522</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>527</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>532</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>562</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>563</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>564</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>565</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>594</LINE>
      <COLUMN>157</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>596</LINE>
      <COLUMN>163</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>598</LINE>
      <COLUMN>165</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>600</LINE>
      <COLUMN>169</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadTXTR</FUNCTION>
    <DECORATED>?loadTXTR@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>512</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>882</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'tempAnchor' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>880</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'temp' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>temp</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>691</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>698</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>699</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>699</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>746</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'result.[]-&gt;dependencyType': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>804</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>617</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>622</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>627</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>632</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>637</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>642</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>649</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>651</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>651</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>652</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>652</LINE>
      <COLUMN>125</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>653</LINE>
      <COLUMN>201</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>656</LINE>
      <COLUMN>89</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>656</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>657</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>657</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>658</LINE>
      <COLUMN>202</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>661</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>661</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>662</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>662</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>663</LINE>
      <COLUMN>196</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>666</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>666</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>667</LINE>
      <COLUMN>194</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>671</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>676</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>684</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>684</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>685</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>685</LINE>
      <COLUMN>100</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>686</LINE>
      <COLUMN>178</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>691</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>691</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>691</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>125</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>692</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>698</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>698</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>698</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>699</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>699</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>699</LINE>
      <COLUMN>129</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>699</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>703</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>703</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>704</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>704</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>705</LINE>
      <COLUMN>179</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>708</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>708</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>709</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>709</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>710</LINE>
      <COLUMN>184</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>713</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>713</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>714</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>714</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>715</LINE>
      <COLUMN>202</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>719</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>719</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>720</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>722</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>722</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>722</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>723</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>723</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>723</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>723</LINE>
      <COLUMN>146</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>724</LINE>
      <COLUMN>214</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>724</LINE>
      <COLUMN>240</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>728</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>728</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>729</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>729</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>730</LINE>
      <COLUMN>206</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>733</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>733</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>734</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>734</LINE>
      <COLUMN>118</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>735</LINE>
      <COLUMN>211</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>738</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>738</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>739</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>741</LINE>
      <COLUMN>118</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>741</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>741</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>742</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>742</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>742</LINE>
      <COLUMN>142</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>742</LINE>
      <COLUMN>173</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>746</LINE>
      <COLUMN>115</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>746</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>746</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>751</LINE>
      <COLUMN>99</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>751</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>752</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>752</LINE>
      <COLUMN>123</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>753</LINE>
      <COLUMN>221</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>756</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>756</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>757</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>759</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>759</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>759</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>760</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>760</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>760</LINE>
      <COLUMN>131</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>760</LINE>
      <COLUMN>169</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>225</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>761</LINE>
      <COLUMN>263</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>765</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>765</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>766</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>766</LINE>
      <COLUMN>99</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>767</LINE>
      <COLUMN>186</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>770</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>770</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>771</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>773</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>773</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>773</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>774</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>774</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>774</LINE>
      <COLUMN>126</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>774</LINE>
      <COLUMN>139</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>775</LINE>
      <COLUMN>213</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>775</LINE>
      <COLUMN>226</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>778</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>778</LINE>
      <COLUMN>123</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>778</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>778</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>779</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>779</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>781</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>781</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>781</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>781</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>143</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>156</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>782</LINE>
      <COLUMN>179</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>783</LINE>
      <COLUMN>247</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>783</LINE>
      <COLUMN>260</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>783</LINE>
      <COLUMN>283</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>786</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>786</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>786</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>786</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>787</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>787</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>787</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>787</LINE>
      <COLUMN>143</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>787</LINE>
      <COLUMN>156</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>787</LINE>
      <COLUMN>179</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>788</LINE>
      <COLUMN>242</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>788</LINE>
      <COLUMN>255</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>788</LINE>
      <COLUMN>278</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>792</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>792</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>792</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>793</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>793</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>793</LINE>
      <COLUMN>126</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>793</LINE>
      <COLUMN>139</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>794</LINE>
      <COLUMN>223</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>794</LINE>
      <COLUMN>236</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>798</LINE>
      <COLUMN>106</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>798</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>798</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>798</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>800</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>800</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>804</LINE>
      <COLUMN>112</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>804</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>804</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>804</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>804</LINE>
      <COLUMN>91</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>136</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>149</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>168</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>805</LINE>
      <COLUMN>171</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>383</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>396</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>415</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>418</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>307</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>320</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>339</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>342</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>231</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>244</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>263</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>808</LINE>
      <COLUMN>266</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>816</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>821</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>825</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>830</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>839</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>839</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>840</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>840</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>841</LINE>
      <COLUMN>189</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>844</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>844</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>845</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>845</LINE>
      <COLUMN>114</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>846</LINE>
      <COLUMN>182</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>850</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>854</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>862</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>862</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>863</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>863</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>866</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>866</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>867</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>867</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>868</LINE>
      <COLUMN>255</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>868</LINE>
      <COLUMN>181</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>872</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>883</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>888</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>892</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>893</LINE>
      <COLUMN>154</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>896</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>905</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>905</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>906</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>906</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>907</LINE>
      <COLUMN>216</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadMLVL</FUNCTION>
    <DECORATED>?loadMLVL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>613</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>962</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'disjointOffset' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>964</LINE>
      <COLUMN>89</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>968</LINE>
      <COLUMN>100</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>968</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>92</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>200</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>169</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>970</LINE>
      <COLUMN>256</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>970</LINE>
      <COLUMN>225</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>974</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>977</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>977</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>992</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>992</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>993</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>993</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>942</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'result.[]-&gt;langCode': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>943</LINE>
      <COLUMN>168</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'result.[]-&gt;langCode': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>918</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>923</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>928</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>933</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>942</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>942</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>943</LINE>
      <COLUMN>203</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>946</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>946</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>947</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>947</LINE>
      <COLUMN>106</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>948</LINE>
      <COLUMN>181</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>954</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>957</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>957</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>958</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>958</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>959</LINE>
      <COLUMN>200</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>964</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>968</LINE>
      <COLUMN>124</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>968</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>968</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>151</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>203</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>970</LINE>
      <COLUMN>207</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>970</LINE>
      <COLUMN>259</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>974</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>977</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>977</LINE>
      <COLUMN>107</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>983</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>988</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>992</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>992</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>993</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>993</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadSTRG</FUNCTION>
    <DECORATED>?loadSTRG@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>912</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1212</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>6246</DEFECTCODE>
    <DESCRIPTION>Local declaration of 'ijk' hides declaration of the same name in outer scope. For additional information, see previous declaration at line '1095' of 'c:\users\yair\documents\github\vkprime\vkprime\primeassimp.hpp'.</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
        <FILENAME>PrimeAssimp.hpp</FILENAME>
        <LINE>1095</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1023</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'halfPrecisionNormals' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1024</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'halfPrecisionUVs' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1092</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'materialStartingMarker' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1703</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'GXFlagBits' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1094</LINE>
      <COLUMN>115</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1203</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1492</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1526</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1528</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1559</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1567</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1570</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1583</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1588</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1602</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1624</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2022</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2041</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1387</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1392</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1533</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'temp3' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>temp3</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1533</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'temp2' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>temp2</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1533</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'temp1' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>temp1</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1026</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'result.[]-&gt;ModelAxisAlignedBoundingBox': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1031</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1634</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1635</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1635</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1677</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1678</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1678</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1005</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1011</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1016</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1026</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1031</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1036</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1041</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1052</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1052</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1053</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1053</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1054</LINE>
      <COLUMN>190</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1069</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1069</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1070</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1070</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1071</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1072</LINE>
      <COLUMN>104</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1072</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1073</LINE>
      <COLUMN>260</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1073</LINE>
      <COLUMN>155</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1073</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1074</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1076</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1076</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1076</LINE>
      <COLUMN>129</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1076</LINE>
      <COLUMN>148</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1077</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1077</LINE>
      <COLUMN>114</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1081</LINE>
      <COLUMN>187</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1081</LINE>
      <COLUMN>220</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1081</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1082</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1082</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1083</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1084</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1084</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1085</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1086</LINE>
      <COLUMN>200</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1086</LINE>
      <COLUMN>317</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1086</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1086</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1087</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1087</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1087</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1087</LINE>
      <COLUMN>156</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1088</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1088</LINE>
      <COLUMN>125</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1090</LINE>
      <COLUMN>129</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1090</LINE>
      <COLUMN>259</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1094</LINE>
      <COLUMN>99</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1094</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1095</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1098</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1120</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1125</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1125</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1128</LINE>
      <COLUMN>149</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1128</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1128</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1128</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>92</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>152</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>167</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1129</LINE>
      <COLUMN>190</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1131</LINE>
      <COLUMN>147</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1131</LINE>
      <COLUMN>162</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1131</LINE>
      <COLUMN>185</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1131</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1131</LINE>
      <COLUMN>186</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1137</LINE>
      <COLUMN>114</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1137</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1137</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1138</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1138</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1138</LINE>
      <COLUMN>145</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1138</LINE>
      <COLUMN>160</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1140</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1140</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1141</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1141</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1142</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1142</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1143</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1143</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1144</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1144</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1145</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1145</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1146</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1146</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1147</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1147</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1148</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1148</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1149</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1149</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1150</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1150</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1151</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1151</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1154</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1161</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1164</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1164</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1166</LINE>
      <COLUMN>165</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1166</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1166</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1166</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1167</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1167</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1167</LINE>
      <COLUMN>89</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1167</LINE>
      <COLUMN>149</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1167</LINE>
      <COLUMN>164</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1167</LINE>
      <COLUMN>180</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1168</LINE>
      <COLUMN>115</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1168</LINE>
      <COLUMN>130</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1168</LINE>
      <COLUMN>146</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1173</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1179</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1187</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1194</LINE>
      <COLUMN>114</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1194</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1194</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1195</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1195</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1195</LINE>
      <COLUMN>143</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1195</LINE>
      <COLUMN>158</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1196</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1196</LINE>
      <COLUMN>105</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1199</LINE>
      <COLUMN>114</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1199</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1199</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1200</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1200</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1200</LINE>
      <COLUMN>143</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1200</LINE>
      <COLUMN>158</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1201</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1201</LINE>
      <COLUMN>105</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1203</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1203</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1207</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1216</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1294</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1338</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1350</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1364</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1368</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1372</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1376</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1382</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1386</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1391</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1397</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1405</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1409</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1424</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1449</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1465</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1492</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1492</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1495</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1501</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1508</LINE>
      <COLUMN>118</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1513</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1513</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1514</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1514</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1515</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1515</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1517</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1517</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1518</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1518</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1519</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1519</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1522</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1526</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1528</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1536</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1537</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1538</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1540</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1541</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1542</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1549</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1549</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1550</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1550</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1551</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1551</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1553</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1553</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1554</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1554</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1555</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1555</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1559</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1567</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1570</LINE>
      <COLUMN>122</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1576</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1576</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1577</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1577</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1579</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1579</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1580</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1580</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1583</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1588</LINE>
      <COLUMN>122</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1594</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1594</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1595</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1595</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1597</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1597</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1598</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1598</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1602</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1608</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1617</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1617</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1618</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1618</LINE>
      <COLUMN>122</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1619</LINE>
      <COLUMN>179</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1624</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1634</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1634</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1634</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1635</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1635</LINE>
      <COLUMN>142</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1635</LINE>
      <COLUMN>159</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1635</LINE>
      <COLUMN>74</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1638</LINE>
      <COLUMN>232</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1638</LINE>
      <COLUMN>159</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1638</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1642</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1641</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1645</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1645</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1646</LINE>
      <COLUMN>206</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1649</LINE>
      <COLUMN>91</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1649</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1650</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1650</LINE>
      <COLUMN>133</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1651</LINE>
      <COLUMN>206</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1654</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1654</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1655</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1655</LINE>
      <COLUMN>140</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1656</LINE>
      <COLUMN>222</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1659</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1659</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1660</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1660</LINE>
      <COLUMN>143</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1661</LINE>
      <COLUMN>237</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1664</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1664</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1665</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1665</LINE>
      <COLUMN>143</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1666</LINE>
      <COLUMN>237</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1669</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1669</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1670</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1670</LINE>
      <COLUMN>138</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1671</LINE>
      <COLUMN>227</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1677</LINE>
      <COLUMN>105</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1677</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1677</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1678</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1678</LINE>
      <COLUMN>144</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1678</LINE>
      <COLUMN>163</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1678</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1681</LINE>
      <COLUMN>238</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1681</LINE>
      <COLUMN>163</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1681</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1685</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1697</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1697</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1701</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1703</LINE>
      <COLUMN>83</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1707</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1721</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1721</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1736</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1736</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1737</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1737</LINE>
      <COLUMN>140</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1738</LINE>
      <COLUMN>229</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1781</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1797</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1797</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1797</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1798</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1802</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1802</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1802</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1803</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1807</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1807</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1807</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1808</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1812</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1812</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1812</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1814</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1818</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1818</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1818</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1820</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1824</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1824</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1824</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1826</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1830</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1830</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1830</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1832</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1836</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1836</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1836</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1838</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1842</LINE>
      <COLUMN>109</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1842</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1842</LINE>
      <COLUMN>119</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1844</LINE>
      <COLUMN>59</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1864</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1867</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1867</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1867</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1869</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1870</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1871</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1873</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1873</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1873</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1875</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1876</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1877</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1879</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1879</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1879</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1881</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1882</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1883</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1887</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1890</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1890</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1890</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1892</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1893</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1894</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1896</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1896</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1896</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1898</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1899</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1900</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1902</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1902</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1902</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1904</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1905</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1906</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1910</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1913</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1913</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1913</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1915</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1916</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1917</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1919</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1919</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1919</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1921</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1922</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1923</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1925</LINE>
      <COLUMN>117</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1925</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1925</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1927</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1928</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>1929</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2013</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2014</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2022</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2027</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2027</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2033</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2041</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadCMDL</FUNCTION>
    <DECORATED>?loadCMDL@@YAXV?$vector@DV?$allocator@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>998</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2240</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>6246</DEFECTCODE>
    <DESCRIPTION>Local declaration of 'i' hides declaration of the same name in outer scope. For additional information, see previous declaration at line '2108' of 'c:\users\yair\documents\github\vkprime\vkprime\primeassimp.hpp'.</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
        <FILENAME>PrimeAssimp.hpp</FILENAME>
        <LINE>2108</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2133</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'getLoc' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'txtrFormat' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2170</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'txtrWidth' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2172</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'txtrHeight' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2174</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'mipCount' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2066</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2067</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2068</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2069</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2063</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'assetCount_resourcesTable' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>assetCount_resourcesTable</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2090</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2091</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2103</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2115</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2117</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2118</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2119</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2139</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2152</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2152</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2089</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'fourCC': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2098</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'fourCC': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2116</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'fourCC': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2129</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'fourCC': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2238</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2152</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>89</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2168</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2170</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2170</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2172</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2172</LINE>
      <COLUMN>67</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2174</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2174</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2174</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2174</LINE>
      <COLUMN>108</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2187</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2194</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2201</LINE>
      <COLUMN>54</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2208</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>2241</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>loadPak</FUNCTION>
    <DECORATED>?loadPak@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>2053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>The const variable 'WIDTH' can be computed at compile-time. Consider using constexpr (con.5).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>The const variable 'HEIGHT' can be computed at compile-time. Consider using constexpr (con.5).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>The const variable 'MAX_FRAMES_IN_FLIGHT' can be computed at compile-time. Consider using constexpr (con.5).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::vector&lt;char const * __ptr64,std::allocator&lt;char const * __ptr64&gt; &gt;::vector&lt;char const * __ptr64,std::allocator&lt;char const * __ptr64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'validationLayers''</FUNCTION>
    <DECORATED>??__EvalidationLayers@@YAXXZ</DECORATED>
    <FUNCLINE>43</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::vector&lt;char const * __ptr64,std::allocator&lt;char const * __ptr64&gt; &gt;::vector&lt;char const * __ptr64,std::allocator&lt;char const * __ptr64&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'deviceExtensions''</FUNCTION>
    <DECORATED>??__EdeviceExtensions@@YAXXZ</DECORATED>
    <FUNCLINE>47</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26814</DEFECTCODE>
    <DESCRIPTION>The const variable 'enableValidationLayers' can be computed at compile-time. Consider using constexpr (con.5).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>CreateDebugUtilsMessengerEXT</FUNCTION>
    <DECORATED>?CreateDebugUtilsMessengerEXT@@YA?AW4VkResult@@PEAUVkInstance_T@@PEBUVkDebugUtilsMessengerCreateInfoEXT@@PEBUVkAllocationCallbacks@@PEAPEAUVkDebugUtilsMessengerEXT_T@@@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkResult' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>CreateDebugUtilsMessengerEXT</FUNCTION>
    <DECORATED>?CreateDebugUtilsMessengerEXT@@YA?AW4VkResult@@PEAUVkInstance_T@@PEBUVkDebugUtilsMessengerCreateInfoEXT@@PEBUVkAllocationCallbacks@@PEAPEAUVkDebugUtilsMessengerEXT_T@@@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'CreateDebugUtilsMessengerEXT' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>CreateDebugUtilsMessengerEXT</FUNCTION>
    <DECORATED>?CreateDebugUtilsMessengerEXT@@YA?AW4VkResult@@PEAUVkInstance_T@@PEBUVkDebugUtilsMessengerCreateInfoEXT@@PEBUVkAllocationCallbacks@@PEAPEAUVkDebugUtilsMessengerEXT_T@@@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DestroyDebugUtilsMessengerEXT</FUNCTION>
    <DECORATED>?DestroyDebugUtilsMessengerEXT@@YAXPEAUVkInstance_T@@PEAUVkDebugUtilsMessengerEXT_T@@PEBUVkAllocationCallbacks@@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DestroyDebugUtilsMessengerEXT' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DestroyDebugUtilsMessengerEXT</FUNCTION>
    <DECORATED>?DestroyDebugUtilsMessengerEXT@@YAXPEAUVkInstance_T@@PEAUVkDebugUtilsMessengerEXT_T@@PEBUVkAllocationCallbacks@@@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'QueueFamilyIndices::isComplete' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>QueueFamilyIndices::isComplete</FUNCTION>
    <DECORATED>?isComplete@QueueFamilyIndices@@QEAA_NXZ</DECORATED>
    <FUNCLINE>76</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>The function 'Vertex::getBindingDescription' could be marked constexpr if compile-time evaluation is desired (f.4).</DESCRIPTION>
    <FUNCTION>Vertex::getBindingDescription</FUNCTION>
    <DECORATED>?getBindingDescription@Vertex@@SA?AUVkVertexInputBindingDescription@@XZ</DECORATED>
    <FUNCLINE>139</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vertex::getBindingDescription' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vertex::getBindingDescription</FUNCTION>
    <DECORATED>?getBindingDescription@Vertex@@SA?AUVkVertexInputBindingDescription@@XZ</DECORATED>
    <FUNCLINE>139</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26497</DEFECTCODE>
    <DESCRIPTION>The function 'Vertex::getAttributeDescriptions' could be marked constexpr if compile-time evaluation is desired (f.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>153</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>154</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>156</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>161</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>163</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>166</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>167</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vertex::getAttributeDescriptions' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vertex::getAttributeDescriptions</FUNCTION>
    <DECORATED>?getAttributeDescriptions@Vertex@@SA?AV?$array@UVkVertexInputAttributeDescription@@$03@std@@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>285</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::initWindow' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::initWindow</FUNCTION>
    <DECORATED>?initWindow@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>285</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>296</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26471</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast. A cast from void* can use static_cast (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::framebufferResizeCallback</FUNCTION>
    <DECORATED>?framebufferResizeCallback@HelloTriangleApplication@@CAXPEAUGLFWwindow@@HH@Z</DECORATED>
    <FUNCLINE>295</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::framebufferResizeCallback' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::framebufferResizeCallback</FUNCTION>
    <DECORATED>?framebufferResizeCallback@HelloTriangleApplication@@CAXPEAUGLFWwindow@@HH@Z</DECORATED>
    <FUNCLINE>295</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>347</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'Right' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::mainLoop</FUNCTION>
    <DECORATED>?mainLoop@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>329</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>369</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanupSwapChain</FUNCTION>
    <DECORATED>?cleanupSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>382</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanupSwapChain</FUNCTION>
    <DECORATED>?cleanupSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>383</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanupSwapChain</FUNCTION>
    <DECORATED>?cleanupSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>356</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::cleanupSwapChain' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanupSwapChain</FUNCTION>
    <DECORATED>?cleanupSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>407</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanup</FUNCTION>
    <DECORATED>?cleanup@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>389</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>408</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanup</FUNCTION>
    <DECORATED>?cleanup@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>389</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>409</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::cleanup</FUNCTION>
    <DECORATED>?cleanup@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>389</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>471</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createInstance</FUNCTION>
    <DECORATED>?createInstance@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>453</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>474</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'debugCreateInfo' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createInstance</FUNCTION>
    <DECORATED>?createInstance@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>453</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>debugCreateInfo</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>476</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createInstance</FUNCTION>
    <DECORATED>?createInstance@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>453</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>480</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createInstance</FUNCTION>
    <DECORATED>?createInstance@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>453</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>493</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::populateDebugMessengerCreateInfo' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::populateDebugMessengerCreateInfo</FUNCTION>
    <DECORATED>?populateDebugMessengerCreateInfo@HelloTriangleApplication@@AEAAXAEAUVkDebugUtilsMessengerCreateInfoEXT@@@Z</DECORATED>
    <FUNCLINE>493</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>537</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkSampleCountFlagBits' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::pickPhysicalDevice</FUNCTION>
    <DECORATED>?pickPhysicalDevice@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>523</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>553</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'queuePriority' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createLogicalDevice</FUNCTION>
    <DECORATED>?createLogicalDevice@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>547</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>554</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'queueFamily' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createLogicalDevice</FUNCTION>
    <DECORATED>?createLogicalDevice@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>547</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>569</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createLogicalDevice</FUNCTION>
    <DECORATED>?createLogicalDevice@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>547</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>574</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createLogicalDevice</FUNCTION>
    <DECORATED>?createLogicalDevice@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>547</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>578</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createLogicalDevice</FUNCTION>
    <DECORATED>?createLogicalDevice@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>547</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>596</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'surfaceFormat' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>597</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'presentMode' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>598</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'extent' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>617</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'queueFamilyIndices' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>597</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkPresentModeKHR' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>641</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkFormat' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>622</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'queueFamilyIndices': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSwapChain</FUNCTION>
    <DECORATED>?createSwapChain@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>593</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>649</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createImageViews</FUNCTION>
    <DECORATED>?createImageViews@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>649</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createImageViews</FUNCTION>
    <DECORATED>?createImageViews@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>714</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createRenderPass</FUNCTION>
    <DECORATED>?createRenderPass@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>653</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>744</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSetLayout</FUNCTION>
    <DECORATED>?createDescriptorSetLayout@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>726</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>771</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'shaderStages' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createGraphicsPipeline</FUNCTION>
    <DECORATED>?createGraphicsPipeline@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>752</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>776</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'bindingDescription' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createGraphicsPipeline</FUNCTION>
    <DECORATED>?createGraphicsPipeline@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>752</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>780</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createGraphicsPipeline</FUNCTION>
    <DECORATED>?createGraphicsPipeline@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>752</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>792</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createGraphicsPipeline</FUNCTION>
    <DECORATED>?createGraphicsPipeline@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>752</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>793</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createGraphicsPipeline</FUNCTION>
    <DECORATED>?createGraphicsPipeline@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>752</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>858</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'shaderStages': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createGraphicsPipeline</FUNCTION>
    <DECORATED>?createGraphicsPipeline@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>752</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>892</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createFramebuffers</FUNCTION>
    <DECORATED>?createFramebuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>879</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>886</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createFramebuffers</FUNCTION>
    <DECORATED>?createFramebuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>879</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>898</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createFramebuffers</FUNCTION>
    <DECORATED>?createFramebuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>879</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>917</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'colorFormat' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createColorResources</FUNCTION>
    <DECORATED>?createColorResources@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>916</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>924</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'depthFormat' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDepthResources</FUNCTION>
    <DECORATED>?createDepthResources@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>923</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>931</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'format' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::findSupportedFormat</FUNCTION>
    <DECORATED>?findSupportedFormat@HelloTriangleApplication@@AEAA?AW4VkFormat@@AEBV?$vector@W4VkFormat@@V?$allocator@W4VkFormat@@@std@@@std@@W4VkImageTiling@@I@Z</DECORATED>
    <FUNCLINE>930</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>930</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkImageTiling' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::findSupportedFormat</FUNCTION>
    <DECORATED>?findSupportedFormat@HelloTriangleApplication@@AEAA?AW4VkFormat@@AEBV?$vector@W4VkFormat@@V?$allocator@W4VkFormat@@@std@@@std@@W4VkImageTiling@@I@Z</DECORATED>
    <FUNCLINE>930</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>954</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::hasStencilComponent' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::hasStencilComponent</FUNCTION>
    <DECORATED>?hasStencilComponent@HelloTriangleApplication@@AEAA_NW4VkFormat@@@Z</DECORATED>
    <FUNCLINE>954</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>965</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'pixels' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'texWidth' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'texHeight' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'imageSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>969</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>190</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'texChannels' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>texChannels</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>984</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>992</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>992</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>960</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>965</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>965</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>156</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>967</LINE>
      <COLUMN>174</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createTextureImage</FUNCTION>
    <DECORATED>?createTextureImage@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>958</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1093</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'counts' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::getMaxUsableSampleCount</FUNCTION>
    <DECORATED>?getMaxUsableSampleCount@HelloTriangleApplication@@AEAA?AW4VkSampleCountFlagBits@@XZ</DECORATED>
    <FUNCLINE>1089</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1089</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::getMaxUsableSampleCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::getMaxUsableSampleCount</FUNCTION>
    <DECORATED>?getMaxUsableSampleCount@HelloTriangleApplication@@AEAA?AW4VkSampleCountFlagBits@@XZ</DECORATED>
    <FUNCLINE>1089</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1207</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'destinationStage' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::transitionImageLayout</FUNCTION>
    <DECORATED>?transitionImageLayout@HelloTriangleApplication@@AEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2I@Z</DECORATED>
    <FUNCLINE>1190</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>destinationStage</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1206</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'sourceStage' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::transitionImageLayout</FUNCTION>
    <DECORATED>?transitionImageLayout@HelloTriangleApplication@@AEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2I@Z</DECORATED>
    <FUNCLINE>1190</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>sourceStage</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1190</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkImageLayout' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::transitionImageLayout</FUNCTION>
    <DECORATED>?transitionImageLayout@HelloTriangleApplication@@AEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2I@Z</DECORATED>
    <FUNCLINE>1190</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1317</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1318</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1319</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1319</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1334</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1337</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1337</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1337</LINE>
      <COLUMN>91</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1344</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1344</LINE>
      <COLUMN>92</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1344</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1347</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1347</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1347</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1347</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::loadScene</FUNCTION>
    <DECORATED>?loadScene@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1261</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1406</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'bufferSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createVertexBuffer</FUNCTION>
    <DECORATED>?createVertexBuffer@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1405</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1414</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createVertexBuffer</FUNCTION>
    <DECORATED>?createVertexBuffer@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1405</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1426</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'bufferSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createIndexBuffer</FUNCTION>
    <DECORATED>?createIndexBuffer@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1434</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createIndexBuffer</FUNCTION>
    <DECORATED>?createIndexBuffer@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1425</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1446</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'bufferSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createUniformBuffers</FUNCTION>
    <DECORATED>?createUniformBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1452</LINE>
      <COLUMN>190</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createUniformBuffers</FUNCTION>
    <DECORATED>?createUniformBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1452</LINE>
      <COLUMN>165</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createUniformBuffers</FUNCTION>
    <DECORATED>?createUniformBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1445</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1459</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1461</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1465</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1467</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1458</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1459</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1460</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1461</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorPool</FUNCTION>
    <DECORATED>?createDescriptorPool@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1456</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1479</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1522</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1489</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1496</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1497</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1498</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1499</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1505</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1506</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1506</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1507</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1508</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1509</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1510</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1511</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1513</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1514</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1514</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1515</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1516</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1517</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1518</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1519</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1519</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createDescriptorSets</FUNCTION>
    <DECORATED>?createDescriptorSets@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1474</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1552</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::beginSingleTimeCommands' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::beginSingleTimeCommands</FUNCTION>
    <DECORATED>?beginSingleTimeCommands@HelloTriangleApplication@@AEAAPEAUVkCommandBuffer_T@@XZ</DECORATED>
    <FUNCLINE>1552</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1571</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::endSingleTimeCommands' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::endSingleTimeCommands</FUNCTION>
    <DECORATED>?endSingleTimeCommands@HelloTriangleApplication@@AEAAXPEAUVkCommandBuffer_T@@@Z</DECORATED>
    <FUNCLINE>1571</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1600</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::findMemoryType</FUNCTION>
    <DECORATED>?findMemoryType@HelloTriangleApplication@@AEAAIII@Z</DECORATED>
    <FUNCLINE>1595</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1600</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::findMemoryType</FUNCTION>
    <DECORATED>?findMemoryType@HelloTriangleApplication@@AEAAIII@Z</DECORATED>
    <FUNCLINE>1595</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1648</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'offsets' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1615</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1640</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1649</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'vertexBuffers': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1625</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1632</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1637</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1638</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1643</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1645</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1649</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1651</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1653</LINE>
      <COLUMN>127</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1653</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1669</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1668</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1666</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1665</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1671</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1673</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1675</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createCommandBuffers</FUNCTION>
    <DECORATED>?createCommandBuffers@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1695</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSyncObjects</FUNCTION>
    <DECORATED>?createSyncObjects@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1681</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1696</LINE>
      <COLUMN>94</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSyncObjects</FUNCTION>
    <DECORATED>?createSyncObjects@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1681</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1697</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createSyncObjects</FUNCTION>
    <DECORATED>?createSyncObjects@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1681</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1706</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'currentTime' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1707</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'time' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1713</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'pitch' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1714</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'roll' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1720</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1724</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1726</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::updateUniformBuffer</FUNCTION>
    <DECORATED>?updateUniformBuffer@HelloTriangleApplication@@AEAAXI@Z</DECORATED>
    <FUNCLINE>1703</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1754</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'waitStages' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1756</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'waitSemaphores': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1757</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'waitStages': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1764</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'signalSemaphores': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1776</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'signalSemaphores': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1780</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'swapChains': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1730</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1733</LINE>
      <COLUMN>116</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1745</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1746</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1748</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1748</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1753</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1760</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1762</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1766</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1768</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::drawFrame</FUNCTION>
    <DECORATED>?drawFrame@HelloTriangleApplication@@AEAAXXZ</DECORATED>
    <FUNCLINE>1729</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1801</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::createShaderModule</FUNCTION>
    <DECORATED>?createShaderModule@HelloTriangleApplication@@AEAAPEAUVkShaderModule_T@@AEBV?$vector@DV?$allocator@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>1797</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1818</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::chooseSwapSurfaceFormat</FUNCTION>
    <DECORATED>?chooseSwapSurfaceFormat@HelloTriangleApplication@@AEAA?AUVkSurfaceFormatKHR@@AEBV?$vector@UVkSurfaceFormatKHR@@V?$allocator@UVkSurfaceFormatKHR@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>1811</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1811</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::chooseSwapSurfaceFormat' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::chooseSwapSurfaceFormat</FUNCTION>
    <DECORATED>?chooseSwapSurfaceFormat@HelloTriangleApplication@@AEAA?AUVkSurfaceFormatKHR@@AEBV?$vector@UVkSurfaceFormatKHR@@V?$allocator@UVkSurfaceFormatKHR@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>1811</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1821</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::chooseSwapPresentMode' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::chooseSwapPresentMode</FUNCTION>
    <DECORATED>?chooseSwapPresentMode@HelloTriangleApplication@@AEAA?AW4VkPresentModeKHR@@AEBV?$vector@W4VkPresentModeKHR@@V?$allocator@W4VkPresentModeKHR@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>1821</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1840</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::chooseSwapExtent</FUNCTION>
    <DECORATED>?chooseSwapExtent@HelloTriangleApplication@@AEAA?AUVkExtent2D@@AEBUVkSurfaceCapabilitiesKHR@@@Z</DECORATED>
    <FUNCLINE>1831</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1841</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26472</DEFECTCODE>
    <DESCRIPTION>Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narrow (type.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::chooseSwapExtent</FUNCTION>
    <DECORATED>?chooseSwapExtent@HelloTriangleApplication@@AEAA?AUVkExtent2D@@AEBUVkSurfaceCapabilitiesKHR@@@Z</DECORATED>
    <FUNCLINE>1831</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1831</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'HelloTriangleApplication::chooseSwapExtent' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::chooseSwapExtent</FUNCTION>
    <DECORATED>?chooseSwapExtent@HelloTriangleApplication@@AEAA?AUVkExtent2D@@AEBUVkSurfaceCapabilitiesKHR@@@Z</DECORATED>
    <FUNCLINE>1831</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1878</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'extensionsSupported' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::isDeviceSuitable</FUNCTION>
    <DECORATED>?isDeviceSuitable@HelloTriangleApplication@@AEAA_NPEAUVkPhysicalDevice_T@@@Z</DECORATED>
    <FUNCLINE>1875</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1902</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'extension-&gt;extensionName': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::checkDeviceExtensionSupport</FUNCTION>
    <DECORATED>?checkDeviceExtensionSupport@HelloTriangleApplication@@AEAA_NPEAUVkPhysicalDevice_T@@@Z</DECORATED>
    <FUNCLINE>1892</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1945</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::getRequiredExtensions</FUNCTION>
    <DECORATED>?getRequiredExtensions@HelloTriangleApplication@@AEAA?AV?$vector@PEBDV?$allocator@PEBD@std@@@std@@XZ</DECORATED>
    <FUNCLINE>1940</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1965</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'layerProperties-&gt;layerName': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::checkValidationLayerSupport</FUNCTION>
    <DECORATED>?checkValidationLayerSupport@HelloTriangleApplication@@AEAA_NXZ</DECORATED>
    <FUNCLINE>1954</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1986</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'fileSize' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::readFile</FUNCTION>
    <DECORATED>?readFile@HelloTriangleApplication@@CA?AV?$vector@DV?$allocator@D@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z</DECORATED>
    <FUNCLINE>1979</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>1997</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'VkDebugUtilsMessageSeverityFlagBitsEXT' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::debugCallback</FUNCTION>
    <DECORATED>?debugCallback@HelloTriangleApplication@@CAIW4VkDebugUtilsMessageSeverityFlagBitsEXT@@IPEBUVkDebugUtilsMessengerCallbackDataEXT@@PEAX@Z</DECORATED>
    <FUNCLINE>1997</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>202</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Mesh::startIndex' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Mesh::{ctor}</FUNCTION>
    <DECORATED>??0Mesh@@QEAA@XZ</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Mesh::startIndex</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SwapChainSupportDetails::capabilities' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SwapChainSupportDetails::{ctor}</FUNCTION>
    <DECORATED>??0SwapChainSupportDetails@@QEAA@XZ</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SwapChainSupportDetails::capabilities</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>2002</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'HelloTriangleApplication::swapChain' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>HelloTriangleApplication::{ctor}</FUNCTION>
    <DECORATED>??0HelloTriangleApplication@@QEAA@XZ</DECORATED>
    <FUNCLINE>2002</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>HelloTriangleApplication::swapChain</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat4x4.inl</FILENAME>
      <LINE>292</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;4,4,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$03$03M$0A@@glm@@QEAAAEAU?$vec@$03M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>289</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat4x4.inl</FILENAME>
      <LINE>292</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;4,4,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$03$03M$0A@@glm@@QEAAAEAU?$vec@$03M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>289</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_quat.inl</FILENAME>
      <LINE>206</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'c' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::qua&lt;float,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$qua@M$0A@@glm@@QEAA@AEBU?$vec@$02M$0A@@1@@Z</DECORATED>
    <FUNCLINE>204</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_quat.inl</FILENAME>
      <LINE>207</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 's' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::qua&lt;float,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$qua@M$0A@@glm@@QEAA@AEBU?$vec@$02M$0A@@1@@Z</DECORATED>
    <FUNCLINE>204</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_quat.inl</FILENAME>
      <LINE>206</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::qua&lt;float,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$qua@M$0A@@glm@@QEAA@AEBU?$vec@$02M$0A@@1@@Z</DECORATED>
    <FUNCLINE>204</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_quat.inl</FILENAME>
      <LINE>207</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::qua&lt;float,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$qua@M$0A@@glm@@QEAA@AEBU?$vec@$02M$0A@@1@@Z</DECORATED>
    <FUNCLINE>204</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'dest' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>swap_endian</FUNCTION>
    <DECORATED>??$swap_endian@F@@YAFF@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>dest</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>swap_endian</FUNCTION>
    <DECORATED>??$swap_endian@F@@YAFF@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>swap_endian</FUNCTION>
    <DECORATED>??$swap_endian@F@@YAFF@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>swap_endian</FUNCTION>
    <DECORATED>??$swap_endian@F@@YAFF@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'swap_endian&lt;short&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>swap_endian</FUNCTION>
    <DECORATED>??$swap_endian@F@@YAFF@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>compute_common.hpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::detail::compute_abs&lt;double,1&gt;::call</FUNCTION>
    <DECORATED>?call@?$compute_abs@N$00@detail@glm@@SANN@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor1&lt;glm::vec,2,float,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor1@Uvec@glm@@$01MM$0A@@detail@glm@@SA?AU?$vec@$01M$0A@@3@P6AMM@ZAEBU43@@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor1&lt;glm::vec,4,float,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor1@Uvec@glm@@$03MM$0A@@detail@glm@@SA?AU?$vec@$03M$0A@@3@P6AMM@ZAEBU43@@Z</DECORATED>
    <FUNCLINE>39</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat4x4.inl</FILENAME>
      <LINE>299</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;4,4,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$03$03M$0A@@glm@@QEBAAEBU?$vec@$03M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat4x4.inl</FILENAME>
      <LINE>299</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;4,4,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$03$03M$0A@@glm@@QEBAAEBU?$vec@$03M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>296</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>43</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>54</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>54</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>55</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>56</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>58</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>59</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>59</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>60</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>62</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>63</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>64</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\gtc\</FILEPATH>
      <FILENAME>quaternion.inl</FILENAME>
      <LINE>64</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26475</DEFECTCODE>
    <DESCRIPTION>Do not use function style C-casts (es.49).</DESCRIPTION>
    <FUNCTION>glm::mat3_cast</FUNCTION>
    <DECORATED>??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@AEBU?$qua@M$0A@@0@@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_exponential.inl</FILENAME>
      <LINE>136</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'glm::inversesqrt&lt;float&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>glm::inversesqrt</FUNCTION>
    <DECORATED>??$inversesqrt@M@glm@@YAMM@Z</DECORATED>
    <FUNCLINE>136</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>func_geometric.inl</FILENAME>
      <LINE>52</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'tmp' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>glm::detail::compute_dot&lt;glm::vec&lt;3,float,0&gt;,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$compute_dot@U?$vec@$02M$0A@@glm@@M$0A@@detail@glm@@SAMAEBU?$vec@$02M$0A@@3@0@Z</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor1&lt;glm::vec,3,float,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor1@Uvec@glm@@$02MM$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@P6AMM@ZAEBU43@@Z</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor2&lt;glm::vec,4,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor2@Uvec@glm@@$03M$0A@@detail@glm@@SA?AU?$vec@$03M$0A@@3@P6AMMM@ZAEBU43@1@Z</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>_vectorize.hpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'Func' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>glm::detail::functor2&lt;glm::vec,2,float,0&gt;::call</FUNCTION>
    <DECORATED>?call@?$functor2@Uvec@glm@@$01M$0A@@detail@glm@@SA?AU?$vec@$01M$0A@@3@P6AMMM@ZAEBU43@1@Z</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat3x3.inl</FILENAME>
      <LINE>251</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;3,3,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$02$02M$0A@@glm@@QEBAAEBU?$vec@$02M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat3x3.inl</FILENAME>
      <LINE>251</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;3,3,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$02$02M$0A@@glm@@QEBAAEBU?$vec@$02M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat3x3.inl</FILENAME>
      <LINE>244</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;3,3,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$02$02M$0A@@glm@@QEAAAEAU?$vec@$02M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>241</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\Visual Studio 2019\Libraries\glm\glm\detail\</FILEPATH>
      <FILENAME>type_mat3x3.inl</FILENAME>
      <LINE>244</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>glm::mat&lt;3,3,float,0&gt;::[]</FUNCTION>
    <DECORATED>??A?$mat@$02$02M$0A@@glm@@QEAAAEAU?$vec@$02M$0A@@1@H@Z</DECORATED>
    <FUNCLINE>241</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'MaterialSet::textureCount' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>MaterialSet::{ctor}</FUNCTION>
    <DECORATED>??0MaterialSet@@QEAA@XZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>MaterialSet::textureCount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'CMDLSurface::centerPoint' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>CMDLSurface::{ctor}</FUNCTION>
    <DECORATED>??0CMDLSurface@@QEAA@XZ</DECORATED>
    <FUNCLINE>174</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CMDLSurface::centerPoint</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>149</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Material::ColorChannelFlags' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Material::{ctor}</FUNCTION>
    <DECORATED>??0Material@@QEAA@XZ</DECORATED>
    <FUNCLINE>149</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Material::ColorChannelFlags</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'AreaDependencies::garbage' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>AreaDependencies::{ctor}</FUNCTION>
    <DECORATED>??0AreaDependencies@@QEAA@XZ</DECORATED>
    <FUNCLINE>76</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>AreaDependencies::garbage</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>106</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Area::areaNameID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Area::{ctor}</FUNCTION>
    <DECORATED>??0Area@@QEAA@XZ</DECORATED>
    <FUNCLINE>106</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Area::areaNameID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Dock::connectingDockCount' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Dock::{ctor}</FUNCTION>
    <DECORATED>??0Dock@@QEAA@XZ</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Dock::connectingDockCount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'STRGTable::STRGTableSize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>STRGTable::{ctor}</FUNCTION>
    <DECORATED>??0STRGTable@@QEAA@XZ</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>STRGTable::STRGTableSize</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>224</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TXTR::mipMapCount' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TXTR::{ctor}</FUNCTION>
    <DECORATED>??0TXTR@@QEAA@XZ</DECORATED>
    <FUNCLINE>224</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TXTR::mipMapCount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>212</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'MREA::worldGeometrySection' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>MREA::{ctor}</FUNCTION>
    <DECORATED>??0MREA@@QEAA@XZ</DECORATED>
    <FUNCLINE>212</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>MREA::worldGeometrySection</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'STRG::stringCount' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>STRG::{ctor}</FUNCTION>
    <DECORATED>??0STRG@@QEAA@XZ</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>STRG::stringCount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>138</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'MLVL::defaultSkyboxID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>MLVL::{ctor}</FUNCTION>
    <DECORATED>??0MLVL@@QEAA@XZ</DECORATED>
    <FUNCLINE>138</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>MLVL::defaultSkyboxID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'CMDLGeometry::surfaceCount' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>CMDLGeometry::{ctor}</FUNCTION>
    <DECORATED>??0CMDLGeometry@@QEAA@XZ</DECORATED>
    <FUNCLINE>183</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CMDLGeometry::surfaceCount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\yair\Documents\GitHub\VkPrime\VkPrime\</FILEPATH>
      <FILENAME>PrimeAssimp.hpp</FILENAME>
      <LINE>195</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'CMDL::MaterialSetCount' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>CMDL::{ctor}</FUNCTION>
    <DECORATED>??0CMDL@@QEAA@XZ</DECORATED>
    <FUNCLINE>195</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>CMDL::MaterialSetCount</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT></DEFECTS>